pipeline {
    agent any

    environment {
        S3_BUCKET = 'reactjs-todo-app-bucket'
        S3_KEY = 'todoapp.zip'
        CODEDEPLOY_APPLICATION = 'ReactJS-Todo-App'
        CODEDEPLOY_DEPLOYMENT_GROUP = 'Todo-app-test-deployment-group'
        AWS_REGION = 'us-east-1' // Replace with your region
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ngofficial99/Todo-app-ReactJS'
            }
        }
       
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }
       
        stage('Run Tests') {
            steps {
                script {
                    sh 'npm test'
                }
            }
        }
       
        stage('Build') {
            steps {
                script {
                    sh 'npm run build'
                }
            }
        }
       
        stage('Package and Upload') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Package the build for deployment
                    sh 'zip -r build.zip build/*'

                    // Upload the package to S3
                    sh """
                        aws s3 cp build.zip s3://$S3_BUCKET/$S3_KEY --region $AWS_REGION
                    """
                }
            }
        }
       
        stage('Deploy') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Trigger AWS CodeDeploy deployment
                    sh """
                        aws deploy create-deployment \
                        --application-name $CODEDEPLOY_APPLICATION \
                        --deployment-group-name $CODEDEPLOY_DEPLOYMENT_GROUP \
                        --s3-location bucket=$S3_BUCKET,key=$S3_KEY,bundleType=zip \
                        --region $AWS_REGION
                    """
                }
            }
        }
    }
   
    post {
        always {
            // Clean up after build
            cleanWs()
        }
        success {
            echo 'Build and deployment completed successfully!'
        }
        failure {
            echo 'Build or deployment failed!'
        }
    }
}